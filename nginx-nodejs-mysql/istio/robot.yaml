#___________________________________________MySQL APP_________________________________________
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
    version: v1
spec:
  selector:
    matchLabels:
      app: mysql
      version: v1
  replicas: 2
  template:
    metadata:
      labels:
        app: mysql
        version: v1
    spec:
      containers:
      - name: mysql      
        image: nour963/robot-mysql
        ports:
        - containerPort: 3306   
---
apiVersion: v1
kind: Service
metadata:
    name: mysql
    labels:
        app: mysql
spec:
    ports:
    - port: 3306
      name: mysql
      targetPort: 3306
    selector:
        app: mysql
---
#_____________________________________________NGINX APP__________________________________________
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
    nginx.conf: |
        worker_processes 1;

        events { worker_connections 1024; }

        http {
        include /etc/nginx/mime.types;

        upstream node {
        server nodejs:8080;
        }

        server {

        listen        80;
        server_name localhost;
        
        location / {
            proxy_pass  http://node;
            proxy_http_version 1.1;

        }

        error_page   500 502 503 504  /50x.html;
        
            location = /50x.html {
                root   /usr/share/nginx/html;
                                }
            } 
            }
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
    version: v1
spec:
  selector:
    matchLabels:
      app: nginx
      version: v1
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
        version: v1
    spec:
      containers:
      - name: nginx    
        image: nour963/nginx-go
        ports:
          - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf   
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    name: http
    targetPort: 80
  selector:
    app: nginx
---
#_______________________________________________NodeJS APP__________________________________________
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: nodejs
  labels:
    app: nodejs
    version: v1
spec:
  selector:
    matchLabels:
      app: nodejs
      version: v1
  replicas: 2
  template:
    metadata:
      labels:
        app: nodejs
        version: v1
    spec:
      containers:
      - name: nodejs
        image: nour963/robot-nodejs
        ports:
          - containerPort: 8080 
---     
apiVersion: v1
kind: Service
metadata:
  name: nodejs
  labels:
    app: nodejs
spec:
  ports:
  - port: 8080
    name: http
    targetPort: 8080
  selector:
    app: nodejs
---
#________________________________________________GATEWAY___________________________________________________
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: nginx-gateway
spec:
  selector:
    istio: ingressgateway           # use istio prebuilt INgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
#_____________________________________________VIRTUAL SERVICE________________________________________________
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
    name: nginx
spec:
    hosts:
    - "*"
    gateways:
    - nginx-gateway
    http:
    - route:
      - destination:
          host: nginx
          subset: v1
          port:
            number: 80
---
#_____________________________________________DESTINATION RULES________________________________________________
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: nginx
spec:
  host: nginx
  subsets:
  - name: v1
    labels:
      version: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: nodejs
spec:
  host: nodejs
  subsets:
  - name: v1
    labels:
      version: v1
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: mysql
spec:
  host: mysql
  subsets:
  - name: v1
    labels:
      version: v1